/**
 *
 * $Id$
 */
package anatlyzer.atl.errors.validation;

import anatlyzer.atl.errors.Problem;
import anatlyzer.atl.errors.ProblemStatus;
import anatlyzer.atl.errors.SeverityKind;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.EMap;

/**
 * A sample validator interface for {@link anatlyzer.atl.errors.Problem}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ProblemValidator {
	boolean validate();

	boolean validateDependents(EList<Problem> value);
	boolean validateDescription(String value);
	boolean validateSeverity(SeverityKind value);
	boolean validateNeedsCSP(boolean value);
	boolean validateStatus(ProblemStatus value);
	boolean validateIgnoredByUser(Boolean value);
	boolean validateData(EMap<String, Object> value);
}
